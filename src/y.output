Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE MethodFieldSemicolonRep RBRACE

    2 MethodFieldSemicolonRep: MethodDecl MethodFieldSemicolonRep
    3                        | FieldDecl MethodFieldSemicolonRep
    4                        | SEMICOLON MethodFieldSemicolonRep
    5                        | ε

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID CommaIdRep SEMICOLON
    8          | error SEMICOLON

    9 CommaIdRep: COMMA ID CommaIdRep
   10           | ε

   11 Type: BOOL
   12     | INT
   13     | DOUBLE

   14 MethodHeader: Type ID LPAR FormalParams RPAR
   15             | VOID ID LPAR FormalParams RPAR
   16             | Type ID LPAR RPAR
   17             | VOID ID LPAR RPAR

   18 FormalParams: Type ID CommaTypeIdRep
   19             | STRING LSQ RSQ ID

   20 CommaTypeIdRep: COMMA Type ID CommaTypeIdRep
   21               | ε

   22 MethodBody: LBRACE StatementVarRep RBRACE

   23 StatementVarRep: Statement StatementVarRep
   24                | VarDecl StatementVarRep
   25                | ε

   26 VarDecl: Type ID CommaIdRep SEMICOLON

   27 Statement: LBRACE StatementRep RBRACE
   28          | IF LPAR Expr RPAR Statement ELSE Statement
   29          | IF LPAR Expr RPAR Statement
   30          | WHILE LPAR Expr RPAR Statement
   31          | RETURN Expr SEMICOLON
   32          | RETURN SEMICOLON
   33          | PRINT LPAR Expr RPAR SEMICOLON
   34          | PRINT LPAR STRLIT RPAR SEMICOLON
   35          | MethodInvocation SEMICOLON
   36          | Assignment SEMICOLON
   37          | ParseArgs SEMICOLON
   38          | SEMICOLON
   39          | error SEMICOLON

   40 StatementRep: Statement StatementRep
   41             | ε

   42 MethodInvocation: ID LPAR RPAR
   43                 | ID LPAR Expr CommaExprRep RPAR
   44                 | ID LPAR error RPAR

   45 CommaExprRep: COMMA Expr CommaExprRep
   46             | ε

   47 Assignment: ID ASSIGN Expr

   48 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   49          | PARSEINT LPAR error RPAR

   50 Expr: ExprOp
   51     | Assignment

   52 ExprOp: LPAR Expr RPAR
   53       | MethodInvocation
   54       | ParseArgs
   55       | ID
   56       | ID DOTLENGTH
   57       | INTLIT
   58       | REALLIT
   59       | BOOLLIT
   60       | MINUS ExprOp
   61       | NOT ExprOp
   62       | PLUS ExprOp
   63       | ExprOp PLUS ExprOp
   64       | ExprOp MINUS ExprOp
   65       | ExprOp STAR ExprOp
   66       | ExprOp DIV ExprOp
   67       | ExprOp MOD ExprOp
   68       | ExprOp AND ExprOp
   69       | ExprOp OR ExprOp
   70       | ExprOp XOR ExprOp
   71       | ExprOp LSHIFT ExprOp
   72       | ExprOp RSHIFT ExprOp
   73       | ExprOp EQ ExprOp
   74       | ExprOp GE ExprOp
   75       | ExprOp GT ExprOp
   76       | ExprOp LE ExprOp
   77       | ExprOp LT ExprOp
   78       | ExprOp NE ExprOp
   79       | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8 39 44 49 79
    ID <info> (258) 1 7 9 14 15 16 17 18 19 20 26 42 43 44 47 48 55 56
    INTLIT <info> (259) 57
    REALLIT <info> (260) 58
    BOOLLIT <info> (261) 59
    STRLIT <info> (262) 34
    PLUS <info> (263) 62 63
    AND <info> (264) 68
    ASSIGN <info> (265) 47
    STAR <info> (266) 65
    DIV <info> (267) 66
    EQ <info> (268) 73
    GE <info> (269) 74
    GT <info> (270) 75
    LE <info> (271) 76
    LT <info> (272) 77
    MINUS <info> (273) 60 64
    MOD <info> (274) 67
    NE <info> (275) 78
    NOT <info> (276) 61
    OR <info> (277) 69
    PRINT <info> (278) 33 34
    DOTLENGTH <info> (279) 56
    LSHIFT <info> (280) 71
    RSHIFT <info> (281) 72
    PARSEINT <info> (282) 48 49
    RETURN <info> (283) 31 32
    BOOL (284) 11
    COMMA (285) 9 20 45
    LBRACE (286) 1 22 27
    LPAR (287) 14 15 16 17 28 29 30 33 34 42 43 44 48 49 52 79
    LSQ (288) 19 48
    RBRACE (289) 1 22 27
    RPAR (290) 14 15 16 17 28 29 30 33 34 42 43 44 48 49 52 79
    RSQ (291) 19 48
    SEMICOLON (292) 4 7 8 26 31 32 33 34 35 36 37 38 39
    ARROW (293)
    XOR (294) 70
    CLASS (295) 1
    DOUBLE (296) 13
    ELSE (297) 28
    IF (298) 28 29
    INT (299) 12
    PUBLIC (300) 6 7
    STATIC (301) 6 7
    STRING (302) 19
    VOID (303) 15 17
    WHILE (304) 30
    RESERVED (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <node> (52)
        on left: 1
        on right: 0
    MethodFieldSemicolonRep <node> (53)
        on left: 2 3 4 5
        on right: 1 2 3 4
    MethodDecl <node> (54)
        on left: 6
        on right: 2
    FieldDecl <node> (55)
        on left: 7 8
        on right: 3
    CommaIdRep <node> (56)
        on left: 9 10
        on right: 7 9 26
    Type <node> (57)
        on left: 11 12 13
        on right: 7 14 16 18 20 26
    MethodHeader <node> (58)
        on left: 14 15 16 17
        on right: 6
    FormalParams <node> (59)
        on left: 18 19
        on right: 14 15
    CommaTypeIdRep <node> (60)
        on left: 20 21
        on right: 18 20
    MethodBody <node> (61)
        on left: 22
        on right: 6
    StatementVarRep <node> (62)
        on left: 23 24 25
        on right: 22 23 24
    VarDecl <node> (63)
        on left: 26
        on right: 24
    Statement <node> (64)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 23 28 29 30 40
    StatementRep <node> (65)
        on left: 40 41
        on right: 27 40
    MethodInvocation <node> (66)
        on left: 42 43 44
        on right: 35 53
    CommaExprRep <node> (67)
        on left: 45 46
        on right: 43 45
    Assignment <node> (68)
        on left: 47
        on right: 36 51
    ParseArgs <node> (69)
        on left: 48 49
        on right: 37 54
    Expr <node> (70)
        on left: 50 51
        on right: 28 29 30 31 33 43 45 47 48 52
    ExprOp <node> (71)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 50 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78


State 0

    0 $accept: • Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS • ID LBRACE MethodFieldSemicolonRep RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID • LBRACE MethodFieldSemicolonRep RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: CLASS ID LBRACE • MethodFieldSemicolonRep RBRACE

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (MethodFieldSemicolonRep)

    MethodFieldSemicolonRep  go to state 9
    MethodDecl               go to state 10
    FieldDecl                go to state 11


State 6

    8 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    4 MethodFieldSemicolonRep: SEMICOLON • MethodFieldSemicolonRep

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (MethodFieldSemicolonRep)

    MethodFieldSemicolonRep  go to state 13
    MethodDecl               go to state 10
    FieldDecl                go to state 11


State 8

    6 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC • STATIC Type ID CommaIdRep SEMICOLON

    STATIC  shift, and go to state 14


State 9

    1 Program: CLASS ID LBRACE MethodFieldSemicolonRep • RBRACE

    RBRACE  shift, and go to state 15


State 10

    2 MethodFieldSemicolonRep: MethodDecl • MethodFieldSemicolonRep

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (MethodFieldSemicolonRep)

    MethodFieldSemicolonRep  go to state 16
    MethodDecl               go to state 10
    FieldDecl                go to state 11


State 11

    3 MethodFieldSemicolonRep: FieldDecl • MethodFieldSemicolonRep

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 5 (MethodFieldSemicolonRep)

    MethodFieldSemicolonRep  go to state 17
    MethodDecl               go to state 10
    FieldDecl                go to state 11


State 12

    8 FieldDecl: error SEMICOLON •

    $default  reduce using rule 8 (FieldDecl)


State 13

    4 MethodFieldSemicolonRep: SEMICOLON MethodFieldSemicolonRep •

    $default  reduce using rule 4 (MethodFieldSemicolonRep)


State 14

    6 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC • Type ID CommaIdRep SEMICOLON

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    VOID    shift, and go to state 21

    Type          go to state 22
    MethodHeader  go to state 23


State 15

    1 Program: CLASS ID LBRACE MethodFieldSemicolonRep RBRACE •

    $default  reduce using rule 1 (Program)


State 16

    2 MethodFieldSemicolonRep: MethodDecl MethodFieldSemicolonRep •

    $default  reduce using rule 2 (MethodFieldSemicolonRep)


State 17

    3 MethodFieldSemicolonRep: FieldDecl MethodFieldSemicolonRep •

    $default  reduce using rule 3 (MethodFieldSemicolonRep)


State 18

   11 Type: BOOL •

    $default  reduce using rule 11 (Type)


State 19

   13 Type: DOUBLE •

    $default  reduce using rule 13 (Type)


State 20

   12 Type: INT •

    $default  reduce using rule 12 (Type)


State 21

   15 MethodHeader: VOID • ID LPAR FormalParams RPAR
   17             | VOID • ID LPAR RPAR

    ID  shift, and go to state 24


State 22

    7 FieldDecl: PUBLIC STATIC Type • ID CommaIdRep SEMICOLON
   14 MethodHeader: Type • ID LPAR FormalParams RPAR
   16             | Type • ID LPAR RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   15 MethodHeader: VOID ID • LPAR FormalParams RPAR
   17             | VOID ID • LPAR RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC Type ID • CommaIdRep SEMICOLON
   14 MethodHeader: Type ID • LPAR FormalParams RPAR
   16             | Type ID • LPAR RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 10 (CommaIdRep)

    CommaIdRep  go to state 31


State 26

   22 MethodBody: LBRACE • StatementVarRep RBRACE

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    BOOL       shift, and go to state 18
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    DOUBLE     shift, and go to state 19
    IF         shift, and go to state 39
    INT        shift, and go to state 20
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 25 (StatementVarRep)

    Type              go to state 41
    StatementVarRep   go to state 42
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 6 (MethodDecl)


State 28

   15 MethodHeader: VOID ID LPAR • FormalParams RPAR
   17             | VOID ID LPAR • RPAR

    BOOL    shift, and go to state 18
    RPAR    shift, and go to state 48
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 49

    Type          go to state 50
    FormalParams  go to state 51


State 29

    9 CommaIdRep: COMMA • ID CommaIdRep

    ID  shift, and go to state 52


State 30

   14 MethodHeader: Type ID LPAR • FormalParams RPAR
   16             | Type ID LPAR • RPAR

    BOOL    shift, and go to state 18
    RPAR    shift, and go to state 53
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20
    STRING  shift, and go to state 49

    Type          go to state 50
    FormalParams  go to state 54


State 31

    7 FieldDecl: PUBLIC STATIC Type ID CommaIdRep • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 32

   39 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 33

   42 MethodInvocation: ID • LPAR RPAR
   43                 | ID • LPAR Expr CommaExprRep RPAR
   44                 | ID • LPAR error RPAR
   47 Assignment: ID • ASSIGN Expr

    ASSIGN  shift, and go to state 57
    LPAR    shift, and go to state 58


State 34

   33 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   34          | PRINT • LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 59


State 35

   48 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   49          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 60


State 36

   31 Statement: RETURN • Expr SEMICOLON
   32          | RETURN • SEMICOLON

    ID         shift, and go to state 61
    INTLIT     shift, and go to state 62
    REALLIT    shift, and go to state 63
    BOOLLIT    shift, and go to state 64
    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    PARSEINT   shift, and go to state 35
    LPAR       shift, and go to state 68
    SEMICOLON  shift, and go to state 69

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 73
    ExprOp            go to state 74


State 37

   27 Statement: LBRACE • StatementRep RBRACE

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 41 (StatementRep)

    Statement         go to state 75
    StatementRep      go to state 76
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 38

   38 Statement: SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 39

   28 Statement: IF • LPAR Expr RPAR Statement ELSE Statement
   29          | IF • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 77


State 40

   30 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 78


State 41

   26 VarDecl: Type • ID CommaIdRep SEMICOLON

    ID  shift, and go to state 79


State 42

   22 MethodBody: LBRACE StatementVarRep • RBRACE

    RBRACE  shift, and go to state 80


State 43

   24 StatementVarRep: VarDecl • StatementVarRep

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    BOOL       shift, and go to state 18
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    DOUBLE     shift, and go to state 19
    IF         shift, and go to state 39
    INT        shift, and go to state 20
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 25 (StatementVarRep)

    Type              go to state 41
    StatementVarRep   go to state 81
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 44

   23 StatementVarRep: Statement • StatementVarRep

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    BOOL       shift, and go to state 18
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    DOUBLE     shift, and go to state 19
    IF         shift, and go to state 39
    INT        shift, and go to state 20
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 25 (StatementVarRep)

    Type              go to state 41
    StatementVarRep   go to state 82
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 45

   35 Statement: MethodInvocation • SEMICOLON

    SEMICOLON  shift, and go to state 83


State 46

   36 Statement: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 84


State 47

   37 Statement: ParseArgs • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 48

   17 MethodHeader: VOID ID LPAR RPAR •

    $default  reduce using rule 17 (MethodHeader)


State 49

   19 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 86


State 50

   18 FormalParams: Type • ID CommaTypeIdRep

    ID  shift, and go to state 87


State 51

   15 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 88


State 52

    9 CommaIdRep: COMMA ID • CommaIdRep

    COMMA  shift, and go to state 29

    $default  reduce using rule 10 (CommaIdRep)

    CommaIdRep  go to state 89


State 53

   16 MethodHeader: Type ID LPAR RPAR •

    $default  reduce using rule 16 (MethodHeader)


State 54

   14 MethodHeader: Type ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 90


State 55

    7 FieldDecl: PUBLIC STATIC Type ID CommaIdRep SEMICOLON •

    $default  reduce using rule 7 (FieldDecl)


State 56

   39 Statement: error SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 57

   47 Assignment: ID ASSIGN • Expr

    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 91
    ExprOp            go to state 74


State 58

   42 MethodInvocation: ID LPAR • RPAR
   43                 | ID LPAR • Expr CommaExprRep RPAR
   44                 | ID LPAR • error RPAR

    error     shift, and go to state 92
    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68
    RPAR      shift, and go to state 93

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 94
    ExprOp            go to state 74


State 59

   33 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   34          | PRINT LPAR • STRLIT RPAR SEMICOLON

    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    STRLIT    shift, and go to state 95
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 96
    ExprOp            go to state 74


State 60

   48 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   49          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 97
    ID     shift, and go to state 98


State 61

   42 MethodInvocation: ID • LPAR RPAR
   43                 | ID • LPAR Expr CommaExprRep RPAR
   44                 | ID • LPAR error RPAR
   47 Assignment: ID • ASSIGN Expr
   55 ExprOp: ID •
   56       | ID • DOTLENGTH

    ASSIGN     shift, and go to state 57
    DOTLENGTH  shift, and go to state 99
    LPAR       shift, and go to state 58

    $default  reduce using rule 55 (ExprOp)


State 62

   57 ExprOp: INTLIT •

    $default  reduce using rule 57 (ExprOp)


State 63

   58 ExprOp: REALLIT •

    $default  reduce using rule 58 (ExprOp)


State 64

   59 ExprOp: BOOLLIT •

    $default  reduce using rule 59 (ExprOp)


State 65

   62 ExprOp: PLUS • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 101


State 66

   60 ExprOp: MINUS • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 102


State 67

   61 ExprOp: NOT • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 103


State 68

   52 ExprOp: LPAR • Expr RPAR
   79       | LPAR • error RPAR

    error     shift, and go to state 104
    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 105
    ExprOp            go to state 74


State 69

   32 Statement: RETURN SEMICOLON •

    $default  reduce using rule 32 (Statement)


State 70

   53 ExprOp: MethodInvocation •

    $default  reduce using rule 53 (ExprOp)


State 71

   51 Expr: Assignment •

    $default  reduce using rule 51 (Expr)


State 72

   54 ExprOp: ParseArgs •

    $default  reduce using rule 54 (ExprOp)


State 73

   31 Statement: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 106


State 74

   50 Expr: ExprOp •
   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    AND     shift, and go to state 108
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    EQ      shift, and go to state 111
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    LT      shift, and go to state 115
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    NE      shift, and go to state 118
    OR      shift, and go to state 119
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121
    XOR     shift, and go to state 122

    $default  reduce using rule 50 (Expr)


State 75

   40 StatementRep: Statement • StatementRep

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    WHILE      shift, and go to state 40

    RBRACE  reduce using rule 41 (StatementRep)

    Statement         go to state 75
    StatementRep      go to state 123
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 76

   27 Statement: LBRACE StatementRep • RBRACE

    RBRACE  shift, and go to state 124


State 77

   28 Statement: IF LPAR • Expr RPAR Statement ELSE Statement
   29          | IF LPAR • Expr RPAR Statement

    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 125
    ExprOp            go to state 74


State 78

   30 Statement: WHILE LPAR • Expr RPAR Statement

    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 126
    ExprOp            go to state 74


State 79

   26 VarDecl: Type ID • CommaIdRep SEMICOLON

    COMMA  shift, and go to state 29

    $default  reduce using rule 10 (CommaIdRep)

    CommaIdRep  go to state 127


State 80

   22 MethodBody: LBRACE StatementVarRep RBRACE •

    $default  reduce using rule 22 (MethodBody)


State 81

   24 StatementVarRep: VarDecl StatementVarRep •

    $default  reduce using rule 24 (StatementVarRep)


State 82

   23 StatementVarRep: Statement StatementVarRep •

    $default  reduce using rule 23 (StatementVarRep)


State 83

   35 Statement: MethodInvocation SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 84

   36 Statement: Assignment SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 85

   37 Statement: ParseArgs SEMICOLON •

    $default  reduce using rule 37 (Statement)


State 86

   19 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 128


State 87

   18 FormalParams: Type ID • CommaTypeIdRep

    COMMA  shift, and go to state 129

    $default  reduce using rule 21 (CommaTypeIdRep)

    CommaTypeIdRep  go to state 130


State 88

   15 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 15 (MethodHeader)


State 89

    9 CommaIdRep: COMMA ID CommaIdRep •

    $default  reduce using rule 9 (CommaIdRep)


State 90

   14 MethodHeader: Type ID LPAR FormalParams RPAR •

    $default  reduce using rule 14 (MethodHeader)


State 91

   47 Assignment: ID ASSIGN Expr •

    $default  reduce using rule 47 (Assignment)


State 92

   44 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 131


State 93

   42 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 42 (MethodInvocation)


State 94

   43 MethodInvocation: ID LPAR Expr • CommaExprRep RPAR

    COMMA  shift, and go to state 132

    $default  reduce using rule 46 (CommaExprRep)

    CommaExprRep  go to state 133


State 95

   34 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 134


State 96

   33 Statement: PRINT LPAR Expr • RPAR SEMICOLON

    RPAR  shift, and go to state 135


State 97

   49 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 136


State 98

   48 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 137


State 99

   56 ExprOp: ID DOTLENGTH •

    $default  reduce using rule 56 (ExprOp)


State 100

   42 MethodInvocation: ID • LPAR RPAR
   43                 | ID • LPAR Expr CommaExprRep RPAR
   44                 | ID • LPAR error RPAR
   55 ExprOp: ID •
   56       | ID • DOTLENGTH

    DOTLENGTH  shift, and go to state 99
    LPAR       shift, and go to state 58

    $default  reduce using rule 55 (ExprOp)


State 101

   62 ExprOp: PLUS ExprOp •
   63       | ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    $default  reduce using rule 62 (ExprOp)


State 102

   60 ExprOp: MINUS ExprOp •
   63       | ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    $default  reduce using rule 60 (ExprOp)


State 103

   61 ExprOp: NOT ExprOp •
   63       | ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    $default  reduce using rule 61 (ExprOp)


State 104

   79 ExprOp: LPAR error • RPAR

    RPAR  shift, and go to state 138


State 105

   52 ExprOp: LPAR Expr • RPAR

    RPAR  shift, and go to state 139


State 106

   31 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 31 (Statement)


State 107

   63 ExprOp: ExprOp PLUS • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 140


State 108

   68 ExprOp: ExprOp AND • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 141


State 109

   65 ExprOp: ExprOp STAR • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 142


State 110

   66 ExprOp: ExprOp DIV • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 143


State 111

   73 ExprOp: ExprOp EQ • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 144


State 112

   74 ExprOp: ExprOp GE • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 145


State 113

   75 ExprOp: ExprOp GT • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 146


State 114

   76 ExprOp: ExprOp LE • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 147


State 115

   77 ExprOp: ExprOp LT • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 148


State 116

   64 ExprOp: ExprOp MINUS • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 149


State 117

   67 ExprOp: ExprOp MOD • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 150


State 118

   78 ExprOp: ExprOp NE • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 151


State 119

   69 ExprOp: ExprOp OR • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 152


State 120

   71 ExprOp: ExprOp LSHIFT • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 153


State 121

   72 ExprOp: ExprOp RSHIFT • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 154


State 122

   70 ExprOp: ExprOp XOR • ExprOp

    ID        shift, and go to state 100
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    ParseArgs         go to state 72
    ExprOp            go to state 155


State 123

   40 StatementRep: Statement StatementRep •

    $default  reduce using rule 40 (StatementRep)


State 124

   27 Statement: LBRACE StatementRep RBRACE •

    $default  reduce using rule 27 (Statement)


State 125

   28 Statement: IF LPAR Expr • RPAR Statement ELSE Statement
   29          | IF LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 156


State 126

   30 Statement: WHILE LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 157


State 127

   26 VarDecl: Type ID CommaIdRep • SEMICOLON

    SEMICOLON  shift, and go to state 158


State 128

   19 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 159


State 129

   20 CommaTypeIdRep: COMMA • Type ID CommaTypeIdRep

    BOOL    shift, and go to state 18
    DOUBLE  shift, and go to state 19
    INT     shift, and go to state 20

    Type  go to state 160


State 130

   18 FormalParams: Type ID CommaTypeIdRep •

    $default  reduce using rule 18 (FormalParams)


State 131

   44 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 44 (MethodInvocation)


State 132

   45 CommaExprRep: COMMA • Expr CommaExprRep

    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 161
    ExprOp            go to state 74


State 133

   43 MethodInvocation: ID LPAR Expr CommaExprRep • RPAR

    RPAR  shift, and go to state 162


State 134

   34 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 135

   33 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 164


State 136

   49 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 49 (ParseArgs)


State 137

   48 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    ID        shift, and go to state 61
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    BOOLLIT   shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    PARSEINT  shift, and go to state 35
    LPAR      shift, and go to state 68

    MethodInvocation  go to state 70
    Assignment        go to state 71
    ParseArgs         go to state 72
    Expr              go to state 165
    ExprOp            go to state 74


State 138

   79 ExprOp: LPAR error RPAR •

    $default  reduce using rule 79 (ExprOp)


State 139

   52 ExprOp: LPAR Expr RPAR •

    $default  reduce using rule 52 (ExprOp)


State 140

   63 ExprOp: ExprOp • PLUS ExprOp
   63       | ExprOp PLUS ExprOp •
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    STAR  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 117

    $default  reduce using rule 63 (ExprOp)


State 141

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   68       | ExprOp AND ExprOp •
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    EQ      shift, and go to state 111
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    LT      shift, and go to state 115
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    NE      shift, and go to state 118
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121
    XOR     shift, and go to state 122

    $default  reduce using rule 68 (ExprOp)


State 142

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   65       | ExprOp STAR ExprOp •
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    $default  reduce using rule 65 (ExprOp)


State 143

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   66       | ExprOp DIV ExprOp •
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    $default  reduce using rule 66 (ExprOp)


State 144

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   73       | ExprOp EQ ExprOp •
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    LT      shift, and go to state 115
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 73 (ExprOp)


State 145

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   74       | ExprOp GE ExprOp •
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 74 (ExprOp)


State 146

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   75       | ExprOp GT ExprOp •
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 75 (ExprOp)


State 147

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   76       | ExprOp LE ExprOp •
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 76 (ExprOp)


State 148

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   77       | ExprOp LT ExprOp •
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 77 (ExprOp)


State 149

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   64       | ExprOp MINUS ExprOp •
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    STAR  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 117

    $default  reduce using rule 64 (ExprOp)


State 150

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   67       | ExprOp MOD ExprOp •
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    $default  reduce using rule 67 (ExprOp)


State 151

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp
   78       | ExprOp NE ExprOp •

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    LT      shift, and go to state 115
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 78 (ExprOp)


State 152

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   69       | ExprOp OR ExprOp •
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    AND     shift, and go to state 108
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    EQ      shift, and go to state 111
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    LT      shift, and go to state 115
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    NE      shift, and go to state 118
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121
    XOR     shift, and go to state 122

    $default  reduce using rule 69 (ExprOp)


State 153

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   71       | ExprOp LSHIFT ExprOp •
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS   shift, and go to state 107
    STAR   shift, and go to state 109
    DIV    shift, and go to state 110
    MINUS  shift, and go to state 116
    MOD    shift, and go to state 117

    $default  reduce using rule 71 (ExprOp)


State 154

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   72       | ExprOp RSHIFT ExprOp •
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS   shift, and go to state 107
    STAR   shift, and go to state 109
    DIV    shift, and go to state 110
    MINUS  shift, and go to state 116
    MOD    shift, and go to state 117

    $default  reduce using rule 72 (ExprOp)


State 155

   63 ExprOp: ExprOp • PLUS ExprOp
   64       | ExprOp • MINUS ExprOp
   65       | ExprOp • STAR ExprOp
   66       | ExprOp • DIV ExprOp
   67       | ExprOp • MOD ExprOp
   68       | ExprOp • AND ExprOp
   69       | ExprOp • OR ExprOp
   70       | ExprOp • XOR ExprOp
   70       | ExprOp XOR ExprOp •
   71       | ExprOp • LSHIFT ExprOp
   72       | ExprOp • RSHIFT ExprOp
   73       | ExprOp • EQ ExprOp
   74       | ExprOp • GE ExprOp
   75       | ExprOp • GT ExprOp
   76       | ExprOp • LE ExprOp
   77       | ExprOp • LT ExprOp
   78       | ExprOp • NE ExprOp

    PLUS    shift, and go to state 107
    STAR    shift, and go to state 109
    DIV     shift, and go to state 110
    EQ      shift, and go to state 111
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    LT      shift, and go to state 115
    MINUS   shift, and go to state 116
    MOD     shift, and go to state 117
    NE      shift, and go to state 118
    LSHIFT  shift, and go to state 120
    RSHIFT  shift, and go to state 121

    $default  reduce using rule 70 (ExprOp)


State 156

   28 Statement: IF LPAR Expr RPAR • Statement ELSE Statement
   29          | IF LPAR Expr RPAR • Statement

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    WHILE      shift, and go to state 40

    Statement         go to state 166
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 157

   30 Statement: WHILE LPAR Expr RPAR • Statement

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    WHILE      shift, and go to state 40

    Statement         go to state 167
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 158

   26 VarDecl: Type ID CommaIdRep SEMICOLON •

    $default  reduce using rule 26 (VarDecl)


State 159

   19 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 19 (FormalParams)


State 160

   20 CommaTypeIdRep: COMMA Type • ID CommaTypeIdRep

    ID  shift, and go to state 168


State 161

   45 CommaExprRep: COMMA Expr • CommaExprRep

    COMMA  shift, and go to state 132

    $default  reduce using rule 46 (CommaExprRep)

    CommaExprRep  go to state 169


State 162

   43 MethodInvocation: ID LPAR Expr CommaExprRep RPAR •

    $default  reduce using rule 43 (MethodInvocation)


State 163

   34 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 164

   33 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 165

   48 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR

    RSQ  shift, and go to state 170


State 166

   28 Statement: IF LPAR Expr RPAR Statement • ELSE Statement
   29          | IF LPAR Expr RPAR Statement •

    ELSE  shift, and go to state 171

    $default  reduce using rule 29 (Statement)


State 167

   30 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 30 (Statement)


State 168

   20 CommaTypeIdRep: COMMA Type ID • CommaTypeIdRep

    COMMA  shift, and go to state 129

    $default  reduce using rule 21 (CommaTypeIdRep)

    CommaTypeIdRep  go to state 172


State 169

   45 CommaExprRep: COMMA Expr CommaExprRep •

    $default  reduce using rule 45 (CommaExprRep)


State 170

   48 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 173


State 171

   28 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    error      shift, and go to state 32
    ID         shift, and go to state 33
    PRINT      shift, and go to state 34
    PARSEINT   shift, and go to state 35
    RETURN     shift, and go to state 36
    LBRACE     shift, and go to state 37
    SEMICOLON  shift, and go to state 38
    IF         shift, and go to state 39
    WHILE      shift, and go to state 40

    Statement         go to state 174
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 172

   20 CommaTypeIdRep: COMMA Type ID CommaTypeIdRep •

    $default  reduce using rule 20 (CommaTypeIdRep)


State 173

   48 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 48 (ParseArgs)


State 174

   28 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 28 (Statement)
